case: 0xF000 
	switch (opcode & 0x00FF)
		0x0007 // 0xFX07: Sets VX to the value of the delay timer
		0x000A // 0xFX0A: Wait for a keypress, halting operation, store in VX
		0x0015 // 0xFX15: Sets delay timer to VX
 		0x0018 // 0xFX18: Sets sound timer to VX
		0x001E // 0xFX1E: Add VX to index
		0x0029 // 0xFX29:  Sets I to the location of the sprite in character VX (4x5 font). 
		0x0033 //0xFX33: Stores BCD representation of VX, with 3 digits, in memory at location I.
		0x0055 // 0xFX55: Store registers V0 through VX in memory at location I.
		0x0065  // 0xFX65: Read registers V0 through VX from memory at location I. 


case: 0xE000
	switch (opcode & 0x00FF)
		0x009E // 0xEX9E: Skips the next instruction if the key stored in VX is pressed.
		0x00A1 // 0xEXA1: Skips the next instruction if the key stored in VX is not pressed.


case 0xD000: // DXYN: Display sprite starting at memory location I, set VF equal to collision.
*case 0xC000: // CXNN: Sets VX to the result of bitwise and on a random number and NN.
*case 0xB000: // BNNN: Jump to address NNN plus V0.
*case 0x9000: // 5XY0: Skips the next instruction if VX does not equal VY.


*case 0x8000:
*switch(opcode & 0x000F)
*	case 0x0000: // 8XY0: Sets VX to the value of VY.
*	case 0x0001: // 8XY1: Sets VX to VX or VY.
*	case 0x0002: // 8XY2: Sets VX to VX and VY.
*	case 0x0003: // 8XY3: Sets VX to VX xor VY.
*	case 0x0004: // 8XY4: Adds VY to VX. VF is set to 1 when there is a carry.
*	case 0x0005: // 8XY5: VY is subtracted from VX. VF is set to 0 when borrow.
*	case 0x0006: // 8XY6: Shifts VX right by one. VF is set to value of least sig bit before shift.
*	case 0x0007: // 8XY7: Sets VX to VY minus VX. VF is set to 0 when borrow.
*	case 0x000E: // 8XYE: Shifts VX left by one. VF is set to value of most sig bit before shift.


*case 0x7000: // 7XNN: Adds NN to VX.		
*case 0x6000: // 6XNN: Sets VX to NN.
*case 0x5000: // 5XY0: Skips the next instruction if VX equals VY.
*case 0x4000: // 4XNN: Skips the next instruction if VX does not equal NN.
*case 0x3000: // 3XNN: Skips the next instruction if VX equals NN.
*case 0x2000: // 2NNN: Calls subroutine at address NNN.
*case 0x1000: // 1NNN: Jumps to address NNN.

*case 0x0000:
*	switch(opcode) 
*		case 0x00E0: // 00E0: Clears the screen.
*		case 0x00EE: // 00EE: Returns from subroutine


